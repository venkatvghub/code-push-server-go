-- Initialize database schema
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Create enum types
CREATE TYPE os_type AS ENUM ('ios', 'android');
CREATE TYPE platform_type AS ENUM ('react_native', 'cordova');

CREATE DATABASE IF NOT EXISTS codepush;

CREATE USER codepush WITH PASSWORD '123456';
GRANT SELECT, UPDATE, INSERT ON DATABASE codepush TO codepush;

\c codepush

CREATE TABLE IF NOT EXISTS apps (
  id SERIAL PRIMARY KEY,
  name VARCHAR(50) NOT NULL,
  uid BIGINT NOT NULL DEFAULT 0,
  os SMALLINT NOT NULL DEFAULT 0, -- Use ENUM if applicable
  platform SMALLINT NOT NULL DEFAULT 0, -- Use ENUM if applicable
  is_use_diff_text BOOLEAN NOT NULL DEFAULT FALSE,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  created_at TIMESTAMP DEFAULT NULL,
  deleted_at TIMESTAMP DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS collaborators (
  id BIGSERIAL PRIMARY KEY,
  appid INTEGER NOT NULL DEFAULT 0,
  uid BIGINT NOT NULL DEFAULT 0,
  roles VARCHAR(20) NOT NULL,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  created_at TIMESTAMP DEFAULT NULL,
  deleted_at TIMESTAMP DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS deployments (
  id SERIAL PRIMARY KEY,
  appid INTEGER NOT NULL DEFAULT 0,
  name VARCHAR(20) NOT NULL,
  description VARCHAR(500) NOT NULL,
  deployment_key VARCHAR(64) NOT NULL,
  last_deployment_version_id INTEGER NOT NULL DEFAULT 0,
  label_id INTEGER NOT NULL DEFAULT 0,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  created_at TIMESTAMP DEFAULT NULL,
  deleted_at TIMESTAMP DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS deployments_history (
  id SERIAL PRIMARY KEY,
  deployment_id INTEGER NOT NULL DEFAULT 0,
  package_id INTEGER NOT NULL DEFAULT 0,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  deleted_at TIMESTAMP DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS deployments_versions (
  id SERIAL PRIMARY KEY,
  deployment_id INTEGER NOT NULL DEFAULT 0,
  app_version VARCHAR(100) NOT NULL,
  current_package_id INTEGER NOT NULL DEFAULT 0,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  created_at TIMESTAMP DEFAULT NULL,
  deleted_at TIMESTAMP DEFAULT NULL,
  min_version BIGINT NOT NULL DEFAULT 0,
  max_version BIGINT NOT NULL DEFAULT 0
);

CREATE TABLE IF NOT EXISTS packages (
  id SERIAL PRIMARY KEY,
  deployment_version_id INTEGER NOT NULL DEFAULT 0,
  deployment_id INTEGER NOT NULL DEFAULT 0,
  description VARCHAR(500) NOT NULL,
  package_hash VARCHAR(64) NOT NULL,
  blob_url VARCHAR(255) NOT NULL,
  size INTEGER NOT NULL DEFAULT 0,
  manifest_blob_url VARCHAR(255) NOT NULL,
  release_method VARCHAR(20) NOT NULL,
  label VARCHAR(20) NOT NULL,
  original_label VARCHAR(20) NOT NULL,
  original_deployment VARCHAR(20) NOT NULL,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  created_at TIMESTAMP DEFAULT NULL,
  released_by BIGINT NOT NULL DEFAULT 0,
  is_mandatory BOOLEAN NOT NULL DEFAULT FALSE,
  is_disabled BOOLEAN NOT NULL DEFAULT FALSE,
  rollout SMALLINT NOT NULL DEFAULT 0,
  deleted_at TIMESTAMP DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS packages_diff (
  id SERIAL PRIMARY KEY,
  package_id INTEGER NOT NULL DEFAULT 0,
  diff_against_package_hash VARCHAR(64) NOT NULL,
  diff_blob_url VARCHAR(255) NOT NULL,
  diff_size INTEGER NOT NULL DEFAULT 0,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  created_at TIMESTAMP DEFAULT NULL,
  deleted_at TIMESTAMP DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS packages_metrics (
  id SERIAL PRIMARY KEY,
  package_id INTEGER NOT NULL DEFAULT 0,
  active INTEGER NOT NULL DEFAULT 0,
  downloaded INTEGER NOT NULL DEFAULT 0,
  failed INTEGER NOT NULL DEFAULT 0,
  installed INTEGER NOT NULL DEFAULT 0,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  created_at TIMESTAMP DEFAULT NULL,
  deleted_at TIMESTAMP DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS user_tokens (
  id BIGSERIAL PRIMARY KEY,
  uid BIGINT NOT NULL DEFAULT 0,
  name VARCHAR(50) NOT NULL,
  tokens VARCHAR(64) NOT NULL,
  created_by VARCHAR(64) NOT NULL,
  description VARCHAR(500) NOT NULL,
  is_session BOOLEAN NOT NULL DEFAULT FALSE,
  expires_at TIMESTAMP DEFAULT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  deleted_at TIMESTAMP DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS users (
  id BIGSERIAL PRIMARY KEY,
  username VARCHAR(50) NOT NULL,
  password VARCHAR(255) NOT NULL,
  email VARCHAR(100) NOT NULL,
  identical VARCHAR(10) NOT NULL,
  ack_code VARCHAR(10) NOT NULL,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  created_at TIMESTAMP DEFAULT NULL,
  UNIQUE (identical),
  UNIQUE (username),
  UNIQUE (email)
);

INSERT INTO users (id, username, password, email, identical, ack_code, updated_at, created_at)
VALUES
	(1, 'admin', '$2a$12$mvUY9kTqW4kSoGuZFDW0sOSgKmNY8SPHVyVrSckBTLtXKf6vKX3W.', 'lisong2010@gmail.com', '4ksvOXqog', 'oZmGE', '2016-11-14 10:46:55', '2016-02-29 21:24:49');

CREATE TABLE IF NOT EXISTS versions (
  id SERIAL PRIMARY KEY,
  type SMALLINT NOT NULL DEFAULT 0, -- Use ENUM if applicable
  version VARCHAR(10) NOT NULL,
  UNIQUE (type)
);

INSERT INTO versions (id, type, version)
VALUES
	(1, 1, '0.5.0');

CREATE TABLE IF NOT EXISTS log_report_deploy (
  id BIGSERIAL PRIMARY KEY,
  status SMALLINT NOT NULL DEFAULT 0, -- Use ENUM if applicable
  package_id INTEGER NOT NULL DEFAULT 0,
  client_unique_id VARCHAR(100) NOT NULL,
  previous_label VARCHAR(20) NOT NULL,
  previous_deployment_key VARCHAR(64) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS log_report_download (
  id BIGSERIAL PRIMARY KEY,
  package_id INTEGER NOT NULL DEFAULT 0,
  client_unique_id VARCHAR(100) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);
